{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/entitycx/reactDev/src/app/components/Context/GridContext.js"],"sourcesContent":["// GridRefContext.js\r\nimport { createContext, useContext, useRef, useEffect, useState } from \"react\";\r\n\r\nconst GridRefContext = createContext(null);\r\n\r\nconst useGridRef = () => {\r\n    return useContext(GridRefContext);\r\n}\r\n\r\nexport { useGridRef, GridRefContext }"],"names":[],"mappings":"AAAA,oBAAoB;;;;;;;AACpB;;AAEA,MAAM,+BAAiB,IAAA,sNAAa,EAAC;AAErC,MAAM,aAAa;IACf,OAAO,IAAA,mNAAU,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///home/entitycx/reactDev/src/app/components/Context/GridProvider.js"],"sourcesContent":["// GridRefProvider.jsx\r\n\"use client\";\r\nimport { useRef, useEffect, useState } from \"react\";\r\nimport { GridRefContext } from \"./GridContext\";\r\n\r\nfunction GridRefProvider({ children }) {\r\n    const gridRef = useRef(null);\r\n    const [gridElement, setGridElement] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (gridRef.current) {\r\n            setGridElement(gridRef.current);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <GridRefContext.Provider value={gridElement}>\r\n            {/* ðŸ‘‡ This span is rendered exactly where it used to be */}\r\n            <span id=\"gridCollection\" ref={gridRef}></span>\r\n            {children}\r\n        </GridRefContext.Provider>\r\n    );\r\n}\r\nexport { GridRefProvider }"],"names":[],"mappings":"AAAA,sBAAsB;;;;;;AAEtB;AACA;AAFA;;;;AAIA,SAAS,gBAAgB,EAAE,QAAQ,EAAE;IACjC,MAAM,UAAU,IAAA,+MAAM,EAAC;IACvB,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iNAAQ,EAAC;IAE/C,IAAA,kNAAS,EAAC;QACN,IAAI,QAAQ,OAAO,EAAE;YACjB,eAAe,QAAQ,OAAO;QAClC;IACJ,GAAG,EAAE;IAEL,qBACI,8OAAC,oKAAc,CAAC,QAAQ;QAAC,OAAO;;0BAE5B,8OAAC;gBAAK,IAAG;gBAAiB,KAAK;;;;;;YAC9B;;;;;;;AAGb","debugId":null}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///home/entitycx/reactDev/src/app/components/Event/FauxEvent.js"],"sourcesContent":["\n/**\n * FauxEvent\n * \n * Object simulating value available from React.SyntheticEvent\n * \n * @param {*} value \n * @returns \n */\nfunction FauxEvent(name, value, thisContext){\n    return {target: {...thisContext, name, value}};\n}\n\nexport {FauxEvent};"],"names":[],"mappings":"AACA;;;;;;;CAOC;;;;AACD,SAAS,UAAU,IAAI,EAAE,KAAK,EAAE,WAAW;IACvC,OAAO;QAAC,QAAQ;YAAC,GAAG,WAAW;YAAE;YAAM;QAAK;IAAC;AACjD","debugId":null}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":["file:///home/entitycx/reactDev/src/app/components/Util/Grid/Grid.js"],"sourcesContent":["\"use client\";\nimport React, { useReducer, useEffect, useState, useCallback } from 'react';\nimport { FauxEvent } from '../../Event/FauxEvent';\nimport './Grid.css';\n\nconst _gridMax = 6;\n\n/**\n * Grid\n * \n * Allows for keying and positioning of elements based on an N x M grid\n * where (N * M) > 1\n * \n * @typedef {{data:[], option:{xLength:number,yLength:number}}} GridOptions\n * @typedef {{keyId: string, top: number, left: number, occupants:string[]}[]} GridKey\n * @typedef {{data:[], option:{xLength:number,yLength:number}}} GridOptions\n * \n * @param {{\n *   optionData: GridOptions, \n *   form: React.JSXElementConstructor,\n *   onSetGrid: React.Reducer,\n *   children: React.JSXElementConstructor,\n * }} props\n * @returns {React.ReactComponentElement} Grid\n * \n * @param {GridOptions} props.optionData - data used to initialize or resize the grid.\n * @param {React.JSXElementConstructor} props.form - for element for submissions to grid.\n * @param {React.Reducer} props.onSetGrid - reducer callback for grid state.\n * @param {React.JSXElementConstructor} props.children - grid item elements.\n */\nfunction Grid({ optionData, form, onSetGrid, children }) {\n\n  function checkSize(x, y) {\n    if (x + y < 2) {\n      throw new Error('Invalid Grid size; must be >= 1');\n    }\n  }\n\n  // let onSetGrid prop dispatch grid state, using optionData for initial state\n  //  \n  const [gridState, gridDispatch] = useReducer(\n    onSetGrid,\n    {\n      gridData: optionData.data,\n      gridKey: _gridKey(optionData.option.xLength, optionData.option.yLength),\n      gridOptions: optionData\n    }\n  );\n\n  /**\n   * gridKey\n   * \n   * Sets the grid keys and positions based on grid size\n   * \n   * @param {number} lenX \n   * @param {number} lenY \n   * @returns {GridKey} Metadata for each grid item slot\n   */\n  function _gridKey(lenX, lenY) {\n    checkSize(lenY, lenX);\n    let grid = [];\n    let keyId = 0;\n    let xMult = 100 / lenX;//rem\n    let yMult = 100 / lenY;//rem\n    for (var y = 0; y < lenY; y++) {\n      let gridRow = [];\n      for (var x = 0; x < lenX; x++) {\n        gridRow.push({\n          keyId: keyId,\n          top: y * yMult,//lenY\n          left: x * xMult,//lenX\n          occupants: [] // may change from array to single value in near future\n        });\n        keyId++;\n      }\n      grid.push(gridRow);\n    }// endfor\n\n    return grid;\n  };// gridKey()\n\n  /**\n   * submitToGrid\n   * \n   * Sends item to grid state dispatching function after checking for \n   * and if necessary setting up a new grid sizing event attached to \n   * item.event.\n   * \n   * @param {Object} item \n   */\n  function submitToGrid(item) {\n    if (!item) {\n      return;\n    }\n    if (item.event) {\n      if (item.event.newGrid) {\n        let eventSize = item.event.newGrid;\n        item.event.newGrid = _gridKey(\n          eventSize.xLength ? eventSize.xLength : gridState.gridKey[0].length,\n          eventSize.yLength ? eventSize.yLength : gridState.gridKey.length,\n        );\n      }\n    }\n    gridDispatch({ ...item });\n  }//submitToGrid\n\n  return (\n    <span className=\"Grid-reducer\">\n      {children(gridState.gridData)}\n      {form(submitToGrid)}\n    </span>\n  )\n}// Grid\n\n\n/**\n * \n * @param {*} param0 \n * @returns \n */\nfunction GridSizeControl({ onChange, className, defaultSize }) {\n\n  const [size, setSize] = useState(defaultSize);\n  const maxGrid = (() => {\n    let grid = [];\n    for (var i = 1; i <= _gridMax; i++) {\n      grid.push(i);\n    }\n    return grid;\n  })();\n\n  const onChangeMemo = useCallback((e) => onChange(e), [onChange]);\n\n  /**\n   * onLocalChange\n   * \n   * @param {string} name \n   * @param {React.SyntheticEvent} e \n   */\n  function onLocalChange(e) {\n    let value = Number(e.target.value);\n    if (e.target.name === 'yLength') {\n      setSize((s) => { return { ...s, y: Math.abs(value) % (_gridMax + 1) } });\n    } else if (e.target.name === 'xLength') {\n      setSize((s) => { return { ...s, x: Math.abs(value) % (_gridMax + 1) } })\n    }\n    return onChangeMemo(e);\n  }\n\n  useEffect(() => {\n    const changer = (e) => {\n      const value = Number(e.target.value);\n      if (e.target.name === 'yLength') {\n        setSize((s) => { return { ...s, y: Math.abs(value) % (_gridMax + 1) } });\n      } else if (e.target.name === 'xLength') {\n        setSize((s) => { return { ...s, x: Math.abs(value) % (_gridMax + 1) } })\n      }\n      return onChangeMemo(e);\n    }\n    changer(FauxEvent('yLength', defaultSize.y));\n    changer(FauxEvent('xLength', defaultSize.x));\n  }, [defaultSize, onChangeMemo]);\n\n  return [\n    <label key={\"gridSizer\"} className={`gridSize ${className}`}>\n      <p>Grid Size:</p>\n      <span className=\"sliderVertical\" >\n        <input name={\"yLength\"} key={\"yLength\"} type=\"range\" min={1} max={_gridMax} step={1} value={size.y} onChange={onLocalChange} list=\"tickmarks\"\n          style={{ width: (4 + _gridMax) + 'vh' }} />\n      </span>\n      <span className=\"sliderHorizontal\" >\n        <section className={\"t123\"} style={{ width: (_gridMax + 0.5).toString() + 'vh', height: _gridMax.toString() + 'vh' }}>\n          {maxGrid.map(n => maxGrid.map(m =>\n            <div\n              key={(_gridMax * (n - 1) + (m - 1)).toString()}\n              className={\"gridOptSignifier \" + (size.x >= m && size.y >= n ? '' : 'oob')} >\n            </div>\n          ))}\n        </section>\n        <input name={\"xLength\"} key={\"xLength\"} type=\"range\" min={1} max={_gridMax} step={1} value={size.x} onChange={onLocalChange} list=\"tickmarks\"\n          style={{ width: (2 + _gridMax) + 'vh' }} />\n      </span>\n      <datalist id=\"tickmarks\">\n        {(maxGrid.map(n => (<option key={n.toString()} value={n} />)))}\n      </datalist>\n    </label>,\n  ]\n}//GridSizeControl\n\nexport { Grid, GridSizeControl };"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 377, "column": 0}, "map": {"version":3,"sources":["file:///home/entitycx/reactDev/src/app/components/Util/Filter/PipeFilter.js"],"sourcesContent":["\"use client\";\nimport React, { useState } from 'react';\n\n/**\n * Filter\n * \n * @param {{\n *   name: string,\n *   style: callback,\n *   event: callback,\n *   content: callback,\n *   controllerSet: React.JSXElementConstructor,\n *   onFilterChange: callback\n * }} props - Component properties.\n * @returns {React.Component} Filter - A Filter component with or without rendered\n *                                     controllers.\n * \n * @param {string} props.name - filter name.\n * @param {callback} props.style - filter style callback.\n * @param {callback} props.event - filter event callback.\n * @param {callback} props.content - filter content callback.\n * @param {React.JSXElementConstructor} props.controllerSet - callback for controller set \n *                                                    rendering (if any).\n * @param {onUpdateFilterSet} props.onFilterChange  - callback for the case changes are made to the\n *                                                    Filter (via a controller)\n */\nfunction Filter({ name, style, event, content, controllerSet, onFilterChange }) {\n\n\n  /**\n   * Assign the project to an employee.\n   * @param {React.SyntheticEvent} e - onChange event (or FauxEvent)\n   * @param {string} e.target.value - updated value.\n   * @param {string} e.target.name - name of controller with update.\n   */\n  function onChange(e, once = false) {\n    let result = {};\n    result[e.target.name] = { value: e.target.value, once };\n    onFilterChange(result);\n  }\n\n  return (\n    (controllerSet) ? controllerSet(onChange) : \"\"\n  );\n}// Filter\n\n/**\n * OptionPipe\n * \n * @typedef {string} FilterControlName\n * @typedef {{FilterControlName: {value: any, once: boolean}}} FilterControlValue\n * \n * @param {{\n *   filterSet:React.JSXElementConstructor,\n *   input: React.JSXElementConstructor,\n *   onOutput: callback\n * }} props\n * @returns {React.Component} OptionPipe - Pipe & Filter component for modifying\n *                                         data between input and output enpoints.\n *\n * @param {...Filter} props.filterSet   - one or more Filter components.\n * @param {React.JSXElementConstructor} props.input - function to render input component\n * @param {callback} props.onOutput     - usually a callback expecting output from \n *                                        the input component.\n */\nfunction OptionPipe({ filterSet, input, onOutput }) {\n  const [valueState, setValueState] = useState({});\n  const [filter,] = useState(filterSet(onUpdateFilterSet));\n\n  function onSubmitToPipe(value) {\n\n    let element = {\n      event: filter.reduce((acc, f) => (\n        f && f.props.event ? { ...acc, ...f.props.event(value, valueState, acc) } : acc\n      ), {}),\n      content: filter.reduce((acc, f) => (\n        f && f.props.content ? f.props.content(value, valueState, acc) : acc\n      ), []),\n      style: filter.reduce((acc, f) => (\n        f && f.props.style ? { ...acc, ...f.props.style(value, valueState, acc) } : acc\n      ), {}),\n    }\n\n    onOutput(element);\n\n    // clear out (one-time) events.  This is allowed so that, for example, we do not attempt\n    // re-building a Grid component on every grid element update render after a grid resizing event.\n    setValueState((s) => {\n      Object.keys(s).forEach((stateValueKey) => {\n        if (s[stateValueKey].once) {\n          delete (s[stateValueKey]);\n        }\n      }); return { ...s };\n    })\n  }// onSubmitToPipe\n\n  /**\n   * onUpdateFilterSet\n   * \n   * @param {FilterControlValue} controllerValue - object containing keyed controller value.\n   * @param {string} controllerValue.FilterControlName - the controller name.\n   * @param {*} controllerValue.FilterControlName.value - the controller value.\n   * @param {boolean} controllerValue.FilterControlName.once - if true, controller state is removed from filter after first use.\n   */\n  function onUpdateFilterSet(controllerValue) {\n    setValueState((s) => {\n      return { ...s, ...controllerValue };\n    })\n  }\n\n  return (\n    <span id=\"textInpupt\" className=\"filterUI\">\n      {input(onSubmitToPipe)}\n      {filter}\n    </span>\n  );\n}//OptionPipe\n\nexport { OptionPipe, Filter };"],"names":[],"mappings":";;;;;;;AACA;AADA;;;AAGA;;;;;;;;;;;;;;;;;;;;;;CAsBC,GACD,SAAS,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,aAAa,EAAE,cAAc,EAAE;IAG5E;;;;;GAKC,GACD,SAAS,SAAS,CAAC,EAAE,OAAO,KAAK;QAC/B,IAAI,SAAS,CAAC;QACd,MAAM,CAAC,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG;YAAE,OAAO,EAAE,MAAM,CAAC,KAAK;YAAE;QAAK;QACtD,eAAe;IACjB;IAEA,OACE,AAAC,gBAAiB,cAAc,YAAY;AAEhD,EAAC,SAAS;AAEV;;;;;;;;;;;;;;;;;;CAkBC,GACD,SAAS,WAAW,EAAE,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE;IAChD,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iNAAQ,EAAC,CAAC;IAC9C,MAAM,CAAC,OAAQ,GAAG,IAAA,iNAAQ,EAAC,UAAU;IAErC,SAAS,eAAe,KAAK;QAE3B,IAAI,UAAU;YACZ,OAAO,OAAO,MAAM,CAAC,CAAC,KAAK,IACzB,KAAK,EAAE,KAAK,CAAC,KAAK,GAAG;oBAAE,GAAG,GAAG;oBAAE,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,YAAY,IAAI;gBAAC,IAAI,KAC3E,CAAC;YACJ,SAAS,OAAO,MAAM,CAAC,CAAC,KAAK,IAC3B,KAAK,EAAE,KAAK,CAAC,OAAO,GAAG,EAAE,KAAK,CAAC,OAAO,CAAC,OAAO,YAAY,OAAO,KAChE,EAAE;YACL,OAAO,OAAO,MAAM,CAAC,CAAC,KAAK,IACzB,KAAK,EAAE,KAAK,CAAC,KAAK,GAAG;oBAAE,GAAG,GAAG;oBAAE,GAAG,EAAE,KAAK,CAAC,KAAK,CAAC,OAAO,YAAY,IAAI;gBAAC,IAAI,KAC3E,CAAC;QACN;QAEA,SAAS;QAET,wFAAwF;QACxF,gGAAgG;QAChG,cAAc,CAAC;YACb,OAAO,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC;gBACtB,IAAI,CAAC,CAAC,cAAc,CAAC,IAAI,EAAE;oBACzB,OAAQ,CAAC,CAAC,cAAc;gBAC1B;YACF;YAAI,OAAO;gBAAE,GAAG,CAAC;YAAC;QACpB;IACF,EAAC,iBAAiB;IAElB;;;;;;;GAOC,GACD,SAAS,kBAAkB,eAAe;QACxC,cAAc,CAAC;YACb,OAAO;gBAAE,GAAG,CAAC;gBAAE,GAAG,eAAe;YAAC;QACpC;IACF;IAEA,qBACE,8OAAC;QAAK,IAAG;QAAa,WAAU;;YAC7B,MAAM;YACN;;;;;;;AAGP,EAAC,YAAY","debugId":null}},
    {"offset": {"line": 506, "column": 0}, "map": {"version":3,"sources":["file:///home/entitycx/reactDev/src/app/components/UX/useTouch.js"],"sourcesContent":["\"use client\";\nimport { useEffect } from 'react';\n\n/** useTouchRef\n * \n * Prevents screen panning on touchscreen device while interacting with element\n * \n * @param {bool} touchActive - true if element touch\n * @param {useRef} ref - useRef object (assumed assigned as element ref prop)\n */\nfunction useTouchRef({ touchActive, ref }) {\n  useEffect(() => {\n    const onTouchMove = (e) => { if (touchActive) { e.preventDefault(); e.stopPropagation() } };\n    const onTouchStart = onTouchMove;\n    if (ref) {\n      ref.current.addEventListener(\"touchmove\", onTouchMove, { passive: false });\n      ref.current.addEventListener(\"touchstart\", onTouchStart, { passive: false });\n    }\n    // React docs suggest using copy for cleanup function as original ref object may be unreferencable\n    const refTarget = { ...ref || {} }\n\n    return () => {\n      if (refTarget) {\n        refTarget.current.removeEventListener(\"touchmove\", onTouchMove);\n        refTarget.current.removeEventListener(\"touchstart\", onTouchStart);\n      }\n    }\n  }, [touchActive, ref])\n}\n\nexport { useTouchRef }"],"names":[],"mappings":";;;;AACA;AADA;;AAGA;;;;;;CAMC,GACD,SAAS,YAAY,EAAE,WAAW,EAAE,GAAG,EAAE;IACvC,IAAA,kNAAS,EAAC;QACR,MAAM,cAAc,CAAC;YAAQ,IAAI,aAAa;gBAAE,EAAE,cAAc;gBAAI,EAAE,eAAe;YAAG;QAAE;QAC1F,MAAM,eAAe;QACrB,IAAI,KAAK;YACP,IAAI,OAAO,CAAC,gBAAgB,CAAC,aAAa,aAAa;gBAAE,SAAS;YAAM;YACxE,IAAI,OAAO,CAAC,gBAAgB,CAAC,cAAc,cAAc;gBAAE,SAAS;YAAM;QAC5E;QACA,kGAAkG;QAClG,MAAM,YAAY;YAAE,GAAG,OAAO,CAAC,CAAC;QAAC;QAEjC,OAAO;YACL,wCAAe;gBACb,UAAU,OAAO,CAAC,mBAAmB,CAAC,aAAa;gBACnD,UAAU,OAAO,CAAC,mBAAmB,CAAC,cAAc;YACtD;QACF;IACF,GAAG;QAAC;QAAa;KAAI;AACvB","debugId":null}},
    {"offset": {"line": 556, "column": 0}, "map": {"version":3,"sources":["file:///home/entitycx/reactDev/src/app/components/Element/BurningElement.js"],"sourcesContent":["\"use client\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useTouchRef } from '../UX/useTouch';\n\nfunction BurningElement({ burningItem }) {\n  const smokeAnimClass = \"engulfing\";\n  const fireAnimClass = \"engulfingSlow\";\n  const letterAnimClass = \"engulfingFast\";\n  const [pressed, setPressed] = useState(false);\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n  const [item, setItem] = useState({ ...burningItem });\n  const dragRef = useRef(null);\n\n  const onPointerMove = (event) => {\n    if (pressed) {\n      event.preventDefault();\n      setPosition({\n        x: position.x + event.movementX,\n        y: position.y + event.movementY\n      })\n    }\n  }\n\n  const onPointerDown = (event) => {\n    dragRef.current.setPointerCapture(event.nativeEvent.pointerId);\n    setPressed(true);\n  }\n\n  useTouchRef({ touchActive: pressed, ref: dragRef });\n\n  useEffect(() => {\n    setItem((s) => burningItem);\n  }, [burningItem])\n\n  return item?.style ? (\n    <span key={\"\" + item.key} className=\"burningItem\"\n      ref={dragRef}\n      onPointerDown={onPointerDown}\n      onPointerMove={pressed ? onPointerMove : (e) => { }}\n      onPointerUp={() => setPressed(false)}\n\n      style={\n        {\n          ...item.style.burningElement,\n          position: 'absolute',//item.style.position, //move to filter\n          top: item.style.bottom + 'vh',  //move to filter\n          left: item.style.left + 'vw',  //move to filter\n          transform: `translate(${position.x}px, ${position.y}px)`,//move to filter\n        }\n      }\n\n    >\n      <div className={'itemContent container ' + (letterAnimClass || '')} style={\n        {\n          backgroundColor: item.style.backgroundColor,\n          color: item.style.color,\n          animation: item.style.animationLetter,\n        }\n      }>\n        {item.content}\n      </div>\n      <span className={\"flicker \"}>\n        <div className={\"red flame \" + fireAnimClass} style={{ animation: item.style.animationFire }}></div>\n        <div className={\"orange flame \" + fireAnimClass} style={{ animation: item.style.animationFire }}></div>\n        <div className={\"yellow flame \" + fireAnimClass} style={{ animation: item.style.animationFire }}></div>\n        <div className={\"white flame \" + fireAnimClass} style={{ animation: item.style.animationFire }}></div>\n      </span>\n      <div className={\"smoke \" + smokeAnimClass} style={{ animation: item.style.animationSmoke }}>\n        <span className=\"s0\"></span>\n        <span className=\"s1\"></span>\n        <span className=\"s2\"></span>\n        <span className=\"s3\"></span>\n        <span className=\"s4\"></span>\n        <span className=\"s5\"></span>\n        <span className=\"s6\"></span>\n        <span className=\"s7\"></span>\n        <span className=\"s8\"></span>\n        <span className=\"s9\"></span>\n      </div>\n    </span>) : <span></span>;\n}\n\nexport { BurningElement }"],"names":[],"mappings":";;;;;AACA;AACA;AAFA;;;;AAIA,SAAS,eAAe,EAAE,WAAW,EAAE;IACrC,MAAM,iBAAiB;IACvB,MAAM,gBAAgB;IACtB,MAAM,kBAAkB;IACxB,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAC;IACvC,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,iNAAQ,EAAC;QAAE,GAAG;QAAG,GAAG;IAAE;IACtD,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,iNAAQ,EAAC;QAAE,GAAG,WAAW;IAAC;IAClD,MAAM,UAAU,IAAA,+MAAM,EAAC;IAEvB,MAAM,gBAAgB,CAAC;QACrB,IAAI,SAAS;YACX,MAAM,cAAc;YACpB,YAAY;gBACV,GAAG,SAAS,CAAC,GAAG,MAAM,SAAS;gBAC/B,GAAG,SAAS,CAAC,GAAG,MAAM,SAAS;YACjC;QACF;IACF;IAEA,MAAM,gBAAgB,CAAC;QACrB,QAAQ,OAAO,CAAC,iBAAiB,CAAC,MAAM,WAAW,CAAC,SAAS;QAC7D,WAAW;IACb;IAEA,IAAA,yJAAW,EAAC;QAAE,aAAa;QAAS,KAAK;IAAQ;IAEjD,IAAA,kNAAS,EAAC;QACR,QAAQ,CAAC,IAAM;IACjB,GAAG;QAAC;KAAY;IAEhB,OAAO,MAAM,sBACX,8OAAC;QAAyB,WAAU;QAClC,KAAK;QACL,eAAe;QACf,eAAe,UAAU,gBAAgB,CAAC,KAAQ;QAClD,aAAa,IAAM,WAAW;QAE9B,OACE;YACE,GAAG,KAAK,KAAK,CAAC,cAAc;YAC5B,UAAU;YACV,KAAK,KAAK,KAAK,CAAC,MAAM,GAAG;YACzB,MAAM,KAAK,KAAK,CAAC,IAAI,GAAG;YACxB,WAAW,CAAC,UAAU,EAAE,SAAS,CAAC,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,GAAG,CAAC;QAC1D;;0BAIF,8OAAC;gBAAI,WAAW,2BAA2B,CAAC,mBAAmB,EAAE;gBAAG,OAClE;oBACE,iBAAiB,KAAK,KAAK,CAAC,eAAe;oBAC3C,OAAO,KAAK,KAAK,CAAC,KAAK;oBACvB,WAAW,KAAK,KAAK,CAAC,eAAe;gBACvC;0BAEC,KAAK,OAAO;;;;;;0BAEf,8OAAC;gBAAK,WAAW;;kCACf,8OAAC;wBAAI,WAAW,eAAe;wBAAe,OAAO;4BAAE,WAAW,KAAK,KAAK,CAAC,aAAa;wBAAC;;;;;;kCAC3F,8OAAC;wBAAI,WAAW,kBAAkB;wBAAe,OAAO;4BAAE,WAAW,KAAK,KAAK,CAAC,aAAa;wBAAC;;;;;;kCAC9F,8OAAC;wBAAI,WAAW,kBAAkB;wBAAe,OAAO;4BAAE,WAAW,KAAK,KAAK,CAAC,aAAa;wBAAC;;;;;;kCAC9F,8OAAC;wBAAI,WAAW,iBAAiB;wBAAe,OAAO;4BAAE,WAAW,KAAK,KAAK,CAAC,aAAa;wBAAC;;;;;;;;;;;;0BAE/F,8OAAC;gBAAI,WAAW,WAAW;gBAAgB,OAAO;oBAAE,WAAW,KAAK,KAAK,CAAC,cAAc;gBAAC;;kCACvF,8OAAC;wBAAK,WAAU;;;;;;kCAChB,8OAAC;wBAAK,WAAU;;;;;;kCAChB,8OAAC;wBAAK,WAAU;;;;;;kCAChB,8OAAC;wBAAK,WAAU;;;;;;kCAChB,8OAAC;wBAAK,WAAU;;;;;;kCAChB,8OAAC;wBAAK,WAAU;;;;;;kCAChB,8OAAC;wBAAK,WAAU;;;;;;kCAChB,8OAAC;wBAAK,WAAU;;;;;;kCAChB,8OAAC;wBAAK,WAAU;;;;;;kCAChB,8OAAC;wBAAK,WAAU;;;;;;;;;;;;;OA1CT,KAAK,KAAK,GAAG;;;;6BA4Cb,8OAAC;;;;;AAChB","debugId":null}},
    {"offset": {"line": 776, "column": 0}, "map": {"version":3,"sources":["file:///home/entitycx/reactDev/src/app/components/Element/ElementView.js"],"sourcesContent":["\"use client\";;\nimport React, { useState, useEffect } from 'react';\nimport { createPortal } from \"react-dom\";\n\nimport { BurningElement } from './BurningElement';\n\n/**\n * ElementView\n * \n * @param {{\n *   data:BurningItem[],\n *   parent:React.DOMElement|undefined\n * }} props\n * @param {CSSStyleRule} data.style\n * @param {React.DOMElement|undefined} parent \n * @returns {React.FunctionComponentElement} ElementView\n */\nfunction ElementView({ data, parent }) {\n\n  const [domEl,] = useState(document.createElement('div'));\n  const [thisParent, setParent] = useState(parent);\n\n  useEffect(() => {\n    let target = document.getElementById('gridCollection');\n    if (thisParent !== target && target !== null) {\n      target.appendChild(domEl);\n      setParent((p) => { target.appendChild(domEl); return target });\n    }\n    if (thisParent) {\n      thisParent.appendChild(domEl);\n      console.log(\"Appended portal container to parent:\", thisParent);\n    }\n    return () => {\n      thisParent?.removeChild(domEl);\n      console.log(\"Removed portal container from parent:\", thisParent);\n    };\n  }, [thisParent, domEl])\n\n  return (data && data.length)\n    ? createPortal(data.map((item) => (<BurningElement key={item.key} burningItem={item} />)), thisParent)\n    : (<p className={\"welcome\"}>Nothing burning.<br />Open the Submit/Options section below to get started.</p>);\n}\n\nexport { ElementView };"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;AAJA;;;;;;AAMA;;;;;;;;;;CAUC,GACD,SAAS,YAAY,EAAE,IAAI,EAAE,MAAM,EAAE;IAEnC,MAAM,CAAC,MAAO,GAAG,IAAA,iNAAQ,EAAC,SAAS,aAAa,CAAC;IACjD,MAAM,CAAC,YAAY,UAAU,GAAG,IAAA,iNAAQ,EAAC;IAEzC,IAAA,kNAAS,EAAC;QACR,IAAI,SAAS,SAAS,cAAc,CAAC;QACrC,IAAI,eAAe,UAAU,WAAW,MAAM;YAC5C,OAAO,WAAW,CAAC;YACnB,UAAU,CAAC;gBAAQ,OAAO,WAAW,CAAC;gBAAQ,OAAO;YAAO;QAC9D;QACA,IAAI,YAAY;YACd,WAAW,WAAW,CAAC;YACvB,QAAQ,GAAG,CAAC,wCAAwC;QACtD;QACA,OAAO;YACL,YAAY,YAAY;YACxB,QAAQ,GAAG,CAAC,yCAAyC;QACvD;IACF,GAAG;QAAC;QAAY;KAAM;IAEtB,OAAO,AAAC,QAAQ,KAAK,MAAM,iBACvB,IAAA,4NAAY,EAAC,KAAK,GAAG,CAAC,CAAC,qBAAU,8OAAC,uKAAc;YAAgB,aAAa;WAAvB,KAAK,GAAG;;;;mBAA2B,4BACxF,8OAAC;QAAE,WAAW;;YAAW;0BAAgB,8OAAC;;;;;YAAK;;;;;;;AACtD","debugId":null}},
    {"offset": {"line": 852, "column": 0}, "map": {"version":3,"sources":["file:///home/entitycx/reactDev/src/app/components/Util/grid.js"],"sourcesContent":["const gridOptionData = {data: [], current: {x: 0, y: 0}, option: {xLength: 1, yLength: 1}};\n\nfunction checkSize(x,y){\n  if (x + y < 2){\n    throw new Error('Invalid Grid size; must be >= 1');\n  }\n}\n\nfunction getNextKeyId(gridState){\n\n  let option = gridState.gridOptions.option;\n  let gridLength = option.xLength  * option.yLength ;\n  let gridRandStart = gridState.gridData.length ? gridState.gridData[gridState.gridData.length - 1].key : Math.floor(Math.random() * gridLength);\n  \n  // check this 'fix' for single-item grid, when published / outside of strict mode\n  gridRandStart = isNaN(gridRandStart) ? 0 : gridRandStart;\n  let addIndex = gridRandStart;\n  let addY, addX, gridAtKey;\n  \n  do{\n    addIndex = (addIndex + 1) % gridLength;\n    addY = Math.floor(addIndex / option.xLength);\n    addX = addIndex % option.xLength;\n    gridAtKey = gridState.gridKey[addY][addX];\n    if (0 === gridAtKey.occupants.length){\n      break;\n    }\n  }while (addIndex !== gridRandStart);\n\n  if (addIndex === gridRandStart){\n    addIndex = (addIndex + 1) % gridLength;\n    addY = Math.floor(addIndex/option.xLength);\n    addX = addIndex % option.xLength;\n    gridAtKey = gridState.gridKey[addY][addX];\n  }\n\n\n  // check this 'fix' for single-item grid, when published / outside of strict mode\n  if (gridRandStart === 0 && gridLength === 1){\n    //\n    // For a single element grid, we change the key, from 0 to a random string,\n    // which will create overflow in our grid collection, expanding the number\n    // of elements to be greater than the (keyed) grid size.  This works from\n    // a UX perspective, but we must constrain this overflow or face eventual\n    // performance decline.  Note that for all other grid sizes > 1, this\n    // overflow is not allowed, and keys must fall into the current grid index \n    // range.\n    //\n    return Math.random().toString(16);\n  }\n  return gridAtKey.keyId;\n}\n\n /**\n  * gridKey\n  * \n  * Sets the grid keys and positions based on grid size\n  * \n  * @param {number} lenX \n  * @param {number} lenY \n  * @returns {GridKey} Metadata for each grid item slot\n  */\n function _gridKey (lenX, lenY) {\n  checkSize(lenY, lenX);\n  let grid = [];\n  let keyId = 0;\n  let xMult = 100/lenX;\n  let yMult = 100/lenY;\n  for(var y = 0; y < lenY; y++){\n    let gridRow = [];\n    for(var x = 0; x < lenX; x++){\n      gridRow.push({\n        keyId: keyId,\n        top: y * yMult,\n        left: x * xMult,\n        occupants: [] // may change from array to single value in near future\n      });\n      keyId++;\n    }\n    grid.push(gridRow);\n  }// endfor\n\n  return grid;\n};// gridKey()\n/**\n * onSetGrid\n * \n * acts as a reducer for grid state\n * \n * @param {*} gridState contains grid positional keys, grid elements, and grid options\n * @param {*} itemAdded \n * @returns \n */\n function onSetGrid (gridState, itemAdded) {\n    if (!itemAdded)\n      return gridState;\n\n    let newGridKey, newGridData, gridLengthX, gridLengthY;\n  \n    if(itemAdded.event){ // controller event annotated item in filter function\n      if(itemAdded.event.newGrid){// assumes grid size checked\n        newGridKey = itemAdded.event.newGrid;\n        newGridData = [];\n        gridLengthY = itemAdded.event.newGrid.length;\n        gridLengthX = itemAdded.event.newGrid[0].length;\n        console.log(\"newGridKey\", gridLengthY * gridLengthX);\n      }\n    }\n    newGridKey = newGridKey || [...gridState.gridKey];\n    newGridData = newGridData || [...gridState.gridData];\n    gridLengthY = gridLengthY || gridState.gridOptions.option.yLength;\n    gridLengthX = gridLengthX || gridState.gridOptions.option.xLength;\n  \n    let g = {...gridState};\n    g.gridOptions.option.yLength = gridLengthY;\n    g.gridOptions.option.xLength = gridLengthX;\n    g.gridKey = newGridKey;\n    g.gridData = newGridData;\n    let addX, addY;\n\n    let addIndex = getNextKeyId(g);\n\n    if (isNaN(addIndex)) {\n      addX = 0;\n      addY = 0;\n    } else {\n      addY = Math.floor(addIndex/gridLengthX);\n      addX = addIndex % gridLengthX;\n    }\n    let gridAtKey = newGridKey[addY][addX];\n    if (newGridKey[addY][addX].occupants.length)\n    {\n      newGridKey[addY][addX].occupants = [];\n      newGridData = newGridData.filter(k => k.key !== gridAtKey.keyId);\n    }\n    itemAdded.style.position = 'absolute';//move to filter\n    itemAdded.style.bottom = gridAtKey.top;//move to filter\n    itemAdded.style.left = gridAtKey.left;//move to filter\n    itemAdded.key = addIndex;\n    if (itemAdded.event){\n     // delete(itemAdded.event);\n      itemAdded.event = {...itemAdded.event, key: itemAdded.key};\n    }\n    // in case of singular element grid size, constrain the number of grid elements\n    if(newGridData.length > 25){\n      newGridData.shift();\n    }\n    try{\n      newGridKey[addY][addX].occupants.push(itemAdded.key);\n      newGridData.push(itemAdded);\n    }catch(e){\n      console.log(newGridKey,\"index\", e.message);\n    };\n    gridOptionData.current = {x: addX, y: addY};\n    return {gridData: newGridData, current: {x: addX, y: addY}, gridKey: newGridKey, gridOptions:{data:[], option:{xLength:gridLengthX, yLength: gridLengthY}}}\n  }//onSetGrid\n  \n  export {onSetGrid, gridOptionData, getNextKeyId};"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1040, "column": 0}, "map": {"version":3,"sources":["file:///home/entitycx/reactDev/src/app/components/Util/input.js"],"sourcesContent":["\"use client\";\nimport React, { useEffect } from 'react';\nimport { FauxEvent } from '../Event/FauxEvent';\n\n/**\n * useInitiator (hook) (alpha/concept)\n * \n * Child input elements have their callbacks run on mount, with the value\n * sent being the value set in the input's defaultValue attribute.\n * \n * Constraints: \n * \n * Child input elements must have (or be given) an onChange method.\n * \n * Only immediate (or labeled) child inputs are initialized (see below).\n * \n * It is assumed that inputs with a label are direct children of that label.\n * In such cases, the inputs will be included in the initializations.\n * \n * @param {...React.ReactElement} children \n * \n * @see FauxEvent\n */\nfunction useInitializer(children) {\n  useEffect(() => {\n    if (children) {\n      React.Children.toArray(children).forEach((child) => {\n        if (child.type === 'label') {\n          if (child.props.children) {\n            React.Children.toArray(child.props.children).forEach((c) => {\n              if (c.props) {\n                if (c.props.onChange) {\n                  c.props.onChange(FauxEvent(c.props.name, c.props.defaultValue || c.props.value));\n                }\n              }\n            })\n          }\n        } else if (child.props && child.props.onChange) {\n          child.props.onChange(FauxEvent(child.props.name, child.props.defaultValue || child.props.value))\n        }\n      });\n    }\n  }, [children]);\n}//useInitializer\n\n/**\n * ControlSetInitializer\n * \n * Simple Component with useInitializer effect applied\n * \n * @param {...React.ReactElement} children\n * @returns \n */\nfunction ControlSetInitializer({ children }) {\n  useInitializer(children);\n  return children;\n}\n\n/**\n * numberToHex\n * \n * Converts number to css friendly hex string (eg. 15 converts to '0f' vs 'f')\n * \n * @param {number} input - number to convert.\n * @returns {string} input number, in css-friendly hex string.\n */\nfunction numberToHex(input) {\n  if (isNaN(input)) {\n    throw new Error(`Invalid input (Number expected). Received ${input}.`)\n  }\n  if (input === undefined || input === null) {\n    input = 255;\n  }\n  let result = input.toString(16);\n  if (result === '') {\n    return '00';\n  }\n  while (result.length < 2) {\n    result = '0' + result;\n  }\n  return result;\n}//numberToHex\n\nexport { useInitializer, ControlSetInitializer, numberToHex };"],"names":[],"mappings":";;;;;;;;AACA;AACA;AAFA;;;AAIA;;;;;;;;;;;;;;;;;;CAkBC,GACD,SAAS,eAAe,QAAQ;IAC9B,IAAA,kNAAS,EAAC;QACR,IAAI,UAAU;YACZ,gNAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAU,OAAO,CAAC,CAAC;gBACxC,IAAI,MAAM,IAAI,KAAK,SAAS;oBAC1B,IAAI,MAAM,KAAK,CAAC,QAAQ,EAAE;wBACxB,gNAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;4BACpD,IAAI,EAAE,KAAK,EAAE;gCACX,IAAI,EAAE,KAAK,CAAC,QAAQ,EAAE;oCACpB,EAAE,KAAK,CAAC,QAAQ,CAAC,IAAA,2JAAS,EAAC,EAAE,KAAK,CAAC,IAAI,EAAE,EAAE,KAAK,CAAC,YAAY,IAAI,EAAE,KAAK,CAAC,KAAK;gCAChF;4BACF;wBACF;oBACF;gBACF,OAAO,IAAI,MAAM,KAAK,IAAI,MAAM,KAAK,CAAC,QAAQ,EAAE;oBAC9C,MAAM,KAAK,CAAC,QAAQ,CAAC,IAAA,2JAAS,EAAC,MAAM,KAAK,CAAC,IAAI,EAAE,MAAM,KAAK,CAAC,YAAY,IAAI,MAAM,KAAK,CAAC,KAAK;gBAChG;YACF;QACF;IACF,GAAG;QAAC;KAAS;AACf,EAAC,gBAAgB;AAEjB;;;;;;;CAOC,GACD,SAAS,sBAAsB,EAAE,QAAQ,EAAE;IACzC,eAAe;IACf,OAAO;AACT;AAEA;;;;;;;CAOC,GACD,SAAS,YAAY,KAAK;IACxB,IAAI,MAAM,QAAQ;QAChB,MAAM,IAAI,MAAM,CAAC,0CAA0C,EAAE,MAAM,CAAC,CAAC;IACvE;IACA,IAAI,UAAU,aAAa,UAAU,MAAM;QACzC,QAAQ;IACV;IACA,IAAI,SAAS,MAAM,QAAQ,CAAC;IAC5B,IAAI,WAAW,IAAI;QACjB,OAAO;IACT;IACA,MAAO,OAAO,MAAM,GAAG,EAAG;QACxB,SAAS,MAAM;IACjB;IACA,OAAO;AACT,EAAC,aAAa","debugId":null}},
    {"offset": {"line": 1133, "column": 0}, "map": {"version":3,"sources":["file:///home/entitycx/reactDev/src/app/components/Util/Parse/ElementParser.js"],"sourcesContent":["import Image from 'next/image'\n/**\n * parseChildren\n * \n * @param {*} text \n * @param {*} children \n * @param {*} todo         list of todos when parsing siblings or children\n * @returns \n */\nfunction parseChildren(text, children, todo) {\n  if (todo.span) {\n    let hasChildren = parseSpans(text, children, todo);\n    return hasChildren ? children : text;\n  }\n  else if (todo.img) {\n    let hasChildren = parseImages(text, children, todo);\n    return hasChildren ? children : text;\n  }\n}//parseChildren\n\n/**\n * parseGeneric\n * \n * Separates shared logic and parser specific matching logic\n * \n * @param {*} text          textual input \n * @param {*} targetArray   stores parsed text and elements in order of appearance\n * @param {*} pattern       pattern to match for parse\n * @param {*} callback      object containing pre-match, match, and post-match logic\n * \n * @returns true if parsing was successful, with match, false otherwise\n */\nfunction parseGeneric(text, targetArray, pattern, callback) {\n  let results = text.match(pattern);\n\n  if (results) {\n    let prevIndex = 0, index = 0, length = 0, tmp = null;\n\n    // loop on each match of pattern, and using the match index, call\n    // pre/post/match callbacks as appropriate\n    results.map(match => {\n      index = text.substring(prevIndex).search(match) + prevIndex;\n      length = match.length;\n\n      // [pre]* [index + length]+ [post]*\n      if (index > prevIndex) {\n        tmp = callback.preMatch(prevIndex, index, length);\n        if (tmp) {\n          targetArray.push(tmp);\n        }\n      }\n      tmp = callback.match(prevIndex, index, length);\n      if (tmp) {\n        targetArray.push(tmp);\n      }\n      prevIndex = index + length;\n      return null;\n    });// results.map\n\n    tmp = callback.postMatch(prevIndex, index, length);\n    if (tmp) {\n      targetArray.push(tmp);\n    }\n    if (prevIndex > 0)\n      return true;\n  }\n  return false;\n}//parseGeneric\n\n/**\n * parseImages\n * \n * @param {*} text         textual input \n * @param {*} targetArray  stores parsed text and elements in order of appearance\n * @param {*} todo         list of todos if parsing siblings or children\n * \n * @returns true if images were parsed from text, false otherwise\n */\nfunction parseImages(text, targetArray, todo = []) {// any todos should be leaf elements\n  let preMatch = (prevIndex, matchIndex, matchLength) => {\n    return text.slice(prevIndex, matchIndex - 1);\n  };\n  let match = (prevIndex, matchIndex, matchLength) => {\n    return <img alt={\"burningItemImg\"} key={matchIndex} style={{ maxWidth: '100%' }}\n      className={\"darkening\"} src={text.slice(matchIndex, matchIndex + matchLength)} />;\n  };\n  let postMatch = (prevIndex, matchIndex, matchLength) => {\n    if (prevIndex < text.length) {\n      return text.slice(prevIndex, text.length);\n    }\n  }\n  return parseGeneric(text, targetArray, /[^ \\n]*(\\.jpg|\\.jpeg|\\.png|\\.svg|\\.gif|\\.webp)[\\s\\\\n\\\\r]*/gi, { preMatch, match, postMatch });\n}//parseImages\n\n/**\n * parseParagraphs\n * \n * @param {*} text         textual input \n * @param {*} targetArray  stores parsed text and elements in order of appearance\n * @param {*} todo         list of todos if parsing siblings or children\n * \n * @returns true if newlines were parsed from text, false otherwise\n */\nfunction parseParagraphs(text, targetArray, todo = {}) {\n  if (todo.img) {\n    todo.span = true;\n  }\n  let preMatch = (prevIndex, matchIndex, matchLength) => {\n    if (matchIndex === prevIndex)\n      return <br key={matchIndex + \"spaceAbove\"} />\n    else return null;\n  };\n  let match = (prevIndex, matchIndex, matchLength) => {\n    if (prevIndex === matchIndex) {\n      return <br key={matchIndex + \"spaceBelow\"} />\n    }\n    else {\n      return <p key={matchIndex}>{parseChildren(text.slice(prevIndex, matchIndex), [], todo)}</p>;\n    }\n  };\n  let postMatch = (prevIndex, matchIndex, matchLength) => {\n    if (prevIndex < text.length) {\n      return <p key={matchIndex}>{parseChildren(text.slice(prevIndex, text.length), [], todo)}</p>\n    }\n  }\n  return parseGeneric(text, targetArray, /(\\n|\\r)/gi, { preMatch, match, postMatch });\n}//parseParagraphs\n\n/**\n * parseSpans\n * \n * @param {*} text         textual input \n * @param {*} targetArray  stores parsed text and elements in order of appearance\n * @param {*} todo         list of todos if parsing siblings or children\n * \n * @returns true if spans were parsed from text successfully, false otherwise\n */\nfunction parseSpans(text, targetArray, todo = {}) {\n  let preMatch = (prevIndex, matchIndex, matchLength) => {\n    if (matchIndex === prevIndex)\n      return <span style={{ color: 'blue' }}>placeholder</span>\n    else {\n      return <span>{parseChildren(text.slice(prevIndex, matchIndex - 1), [], todo)}</span>\n    }\n  };\n  let match = (prevIndex, matchIndex, matchLength) => {\n    return <span>{parseChildren(text.slice(prevIndex, matchIndex + matchLength), [], todo)}</span>;\n  };\n  let postMatch = (prevIndex, matchIndex, matchLength) => {\n    if (prevIndex < text.length) {\n      console.log(\"postMatch\", prevIndex, text.length);\n      return <span>{parseChildren(text.slice(prevIndex, text.length), [], todo)}</span>;\n    }\n  }\n  let result = parseGeneric(text, targetArray, /([*][*][^*]+[*][*])|([_][_][^_]+[_][_])/gi, { preMatch, match, postMatch });\n\n  //<p>...<img>...</p> is allowed (without intermediate span), so we check if in todo regardless of result\n  if (!result && todo.img) {\n    return parseImages(text, targetArray, todo);\n  }\n}//parseSpans\n\nexport { parseImages, parseSpans, parseParagraphs };"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1360, "column": 0}, "map": {"version":3,"sources":["file:///home/entitycx/reactDev/src/app/components/UX/Knob/Knob.js"],"sourcesContent":["\"use client\";\nimport React, { useState, useRef } from 'react';\nimport { useTouchRef } from '../useTouch';\nimport { FauxEvent } from '../../Event/FauxEvent';\nimport './Knob.css';\n\n/**\n * Knob\n * \n * A circular slider input.  Uses css property shape-outside and svg half-circle(s)\n * along with a parent element padding-top to push a knob slider 'around' the \n * half-circle shape(s).\n * \n * @param {Object} props - component properties.\n * @returns {React.ReactComponentElement} Knob component element\n * \n * @param {string} props.name     - controller name\n * @param {number} props.r        - knob radius\n * @param {number} props.cy       - knob viewpoint center y\n * @param {number} props.cx       - knob viewpoint center x\n * @param {number} props.minValue - knob minimum value\n * @param {number} props.maxValue - knob maximum value\n * @param {number} props.defaultValue - knob default value\n * @param {callback} props.onChange - on value changed callback\n * @param {callback} props.styleProps - ocallback for dynamic styling based on knob state\n * @param {callback} props.handleColor - ocallback for changing knob color based on knob state\n\n */\nfunction Knob({ name, r = 35, cy = 50, cx = 50, minValue = 10, maxValue = 30, defaultValue = 25, label = \"\", onChange, className, styleProps, handleColor }) {\n  const knobMax = 75;\n  const knobMin = 5;\n  const [knob, setKnob] = useState({\n    side: 'right',  // which side of hemisphere knob is pointing\n    // (left|right|both(not yet implemented))\n    innerValue: convertValueKnob(defaultValue), // knob raw value\n    refValue: { x: 0, y: 0 },                                // Pointerdown reference value\n    knobMax,    // max raw value\n    knobMin,    // min raw value\n    value: defaultValue,    // computed value\n    active: false,  // knob is active (adjustable)\n    hoverInactive: false, // knob inactive but hovered over\n    initTouchValue: { x: 0, y: 0 }\n  });\n  const knobRef = useRef(null);\n\n  const [styleFunc,] = useState(styleProps || {\n    knob: (value, style) => { return style },\n    handle: (value, style) => { return style }\n  });\n\n  /* using quadrants to calculate relative velocity delta */\n  function getKnobQuadrant(offset) {\n    console.log(\"offsets: x: \" + offset.x + \" y: \" + offset.y);\n    let quad = 1; //topright, botright, botleft, topleft\n    if (offset.y >= 50)\n      if (offset.x >= 50)\n        quad = 2;\n      else quad = 3;\n    else if (offset.x < 50)\n      quad = 4;\n    console.log(\"quad: \" + quad);\n    return quad;\n  }\n\n  /**\n   * \n   * @param {x,y coords} offset \n   * @returns \n   */\n  function getKnobMultiplier(offset) {\n    // const rect = e.currentTarget.getBoundingClientRect();\n    // const cx = rect.width / 2;\n    // const cy = rect.height / 2;\n    // const dx = offset.x - cx;\n    // const dy = offset.y - cy;\n    // const distance = Math.sqrt(dx * dx + dy * dy);\n\n    // return Math.min(1, Math.sqrt(\n    //   Math.pow(offset.x - 50, 2) +\n    //   Math.pow(offset.y - 50, 2)\n    // ) / 50);//maxRadius\n\n    // return ((Math.abs(50 - offset.y) / 2 + Math.abs(50 - offset.x) / 2)) / 50;\n\n    return Math.sqrt(\n      Math.pow(knob.initTouchValue.x - 50, 2) +\n      Math.pow(knob.initTouchValue.y - 50, 2)\n    ) / 50;\n  }\n\n  /**\n   * convertKnobValue\n   * \n   * Converts constrained knob inner value to outer value.\n   * \n   * @param {Number} innerValue \n   * @returns \n   */\n  function convertKnobValue(innerValue) {\n    if (innerValue > knob.knobMax) {\n      innerValue = knob.knobMax;\n    }\n    else if (innerValue < knob.knobMin) {\n      innerValue = knob.knobMin;\n    }\n    return {\n      innerValue,\n      value: Math.floor((innerValue - knob.knobMin)\n        * ((maxValue - minValue) / (knob.knobMax - knob.knobMin)))\n        + minValue\n    };\n  }\n\n  /**\n   * convertValueKnob\n   * \n   * Converts knob outer value to constrained inner value.\n   * \n   * @param {Number} innerValue \n   * @returns \n   */\n  function convertValueKnob(value) {\n    let result = (value - minValue) / ((maxValue - minValue) / (knobMax - knobMin)) + knobMin;\n    return result < knobMin ? knobMin : (result > knobMax ? knobMax : result);\n  }\n\n  /**\n   * onKnobKey\n   * \n   * Keyboard accessibility event handler\n   * \n   * @param {React.SyntheticEvent} e \n   */\n  function onKnobKey(e) {\n    let multiplier;\n    switch (e.key) {\n      case \"ArrowUp\":\n      case \"ArrowRight\":\n        e.preventDefault();\n        e.stopPropagation();\n        multiplier = 1.01;\n        break;\n      case \"ArrowDown\":\n      case \"ArrowLeft\":\n        e.preventDefault();\n        e.stopPropagation();\n        multiplier = 0.99;\n        break;\n      default: break;\n    }\n    let val = convertKnobValue(knob.innerValue * multiplier);\n    if (!isNaN(multiplier)) {\n      setKnob((knob) => {\n        return { ...knob, innerValue: val.innerValue, value: val.value }\n      });\n      onChange(FauxEvent(name, val.value));\n    }\n  }\n\n  function onValueChange(value) {\n    setKnob((k) => {\n      return { ...k, ...value };\n    });\n  }\n\n  useTouchRef({ touchActive: knob.active, ref: knobRef });\n\n  return (\n    <svg viewBox=\"0 0 100 100\"\n      className={`knob ${className}`}\n      style={{ cursor: knob.active ? 'grabbing' : 'grab' }}\n      ref={knobRef}\n\n      onPointerEnter={(e) => {\n        if (!knob.active) {\n          onValueChange({ hoverInactive: true });\n        }\n      }}\n\n      onPointerLeave={(e) => {\n        onValueChange({ hoverInactive: false });\n        if (knob.active) {\n          onChange(FauxEvent(name, knob.value));\n        }\n      }}\n\n      onPointerDown={(e) => {\n        e.nativeEvent.preventDefault();\n        knobRef.current.setPointerCapture(e.nativeEvent.pointerId);\n        const rect = e.currentTarget.getBoundingClientRect();\n\n        // Local coordinates inside the elementâ€™s box, scaled to 0â€“100\n        const offset = {\n          x: ((e.clientX - rect.left) / rect.width) * 100,\n          y: ((e.clientY - rect.top) / rect.height) * 100\n        };\n        setKnob((knob) => {\n          return { ...knob, initTouchValue: offset }\n        });\n        onValueChange({ refValue: { x: offset.x, y: offset.y }, active: true, hoverInactive: false });\n      }}\n\n      onPointerUp={(e) => {\n        onValueChange({ active: false, hoverInactive: true });\n        onChange(FauxEvent(name, knob.value));\n      }}\n      // onPointerMove={(e) => {\n      //   if (!knob.active) {\n      //     return;\n      //   }\n\n      //   onValueChange({ hoverInactive: false });\n\n      //   let offset = { y: e.nativeEvent.offsetY, x: e.nativeEvent.offsetX };\n      //   let multiplier = getKnobMultiplier(offset);\n      //   let quad = getKnobQuadrant(offset);\n      //   let velocity = {\n      //     x: offset.x - knob.refValue.x,\n      //     y: offset.y - knob.refValue.y,\n      //     xDominant: false\n      //   };\n\n      //   if (Math.abs(velocity.x) > Math.abs(velocity.y)) {\n      //     velocity.xDominant = true;\n      //   }\n      //   else if (Math.abs(velocity.x) === Math.abs(velocity.y)) {\n      //     velocity.y = 1.5 * velocity.y;\n      //   }\n\n      //   switch (quad) {\n      //     case 2:\n      //       velocity.x = -velocity.x;\n      //       break;\n      //     case 3:\n      //       velocity = { ...velocity, x: -velocity.x, y: -velocity.y };\n      //       break;\n      //     case 4:\n      //       velocity.y = -velocity.y;\n      //       break;\n      //     default: break;\n      //   }\n\n      //   // --- New: radial distance factor ---\n      //   const rect = e.currentTarget.getBoundingClientRect();\n      //   const localX = e.clientX - rect.left;\n      //   const localY = e.clientY - rect.top;\n\n      //   const cx = rect.width / 2;\n      //   const cy = rect.height / 2;\n\n      //   const dx = localX - cx;\n      //   const dy = localY - cy;\n      //   const distance = Math.sqrt(dx * dx + dy * dy);\n\n      //   const localMultiplier = 0.3;\n\n      //   // Normalize distance so that 1.0 = edge of knob\n      //   const maxRadius = Math.min(cx, cy);\n      //   const radialFactor = localMultiplier * distance / maxRadius;\n\n      //   const now = performance.now();\n      //   const lastTs = knob._ts ?? now;\n      //   const dt = Math.max(0, now - lastTs);\n      //   const TAU_MS = 80;\n      //   const alpha = 1 - Math.exp(-dt / TAU_MS);\n\n\n      //   // Clamp to avoid extreme jumps if pointer goes way outside\n      //   const clampedRadial = 1 + Math.max(0.001, Math.min(radialFactor, 1.5));\n      //   const clampedMultiplier = Math.max(2, multiplier);\n      //   const mixedMultiplier = Math.max(0.5, (clampedRadial + clampedMultiplier) * 0.5);\n      //   let knobValue;\n      //   if (velocity.xDominant) {\n      //     knobValue = convertKnobValue(knob.innerValue + velocity.x * mixedMultiplier);\n      //   } else {\n      //     knobValue = convertKnobValue(knob.innerValue + velocity.y * mixedMultiplier);\n      //   }\n\n      //   const targetInner = Number.isFinite(knobValue?.innerValue) ? knobValue.innerValue : knob.innerValue;\n      //   const smoothedInner = knob.innerValue + (targetInner - knob.innerValue) * alpha;\n      //   // const smoothedInner = targetInner;//knob.innerValue + (targetInner - knob.innerValue) * alpha;\n      //   console.log(\"vel: \" + velocity.x, velocity.y, \"smoothed: \" + smoothedInner, \"mult: \" + multiplier, \"clamped: \" + clampedRadial);\n      //   setKnob((prev) => ({\n      //     ...prev,\n      //     innerValue: smoothedInner,\n      //     value: knobValue.value,\n      //     refValue: { x: offset.x, y: offset.y },\n      //     _ts: now\n      //   }));\n      // }\n      // }\n\n      ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n      onPointerMove={(e) => {\n        if (!knob.active) {\n          return;\n        }\n\n        onValueChange({ hoverInactive: false });\n\n        let knobValue;\n        const rect = e.currentTarget.getBoundingClientRect();\n\n        // Local coordinates inside the elementâ€™s box, scaled to 0â€“100\n        const offset = {\n          x: ((e.clientX - rect.left) / rect.width) * 100,\n          y: ((e.clientY - rect.top) / rect.height) * 100\n        };\n\n        let quad = getKnobQuadrant(offset);\n        let velocity = { x: offset.x - knob.refValue.x, y: offset.y - knob.refValue.y, xDominant: false };\n        let knobMultiplier = getKnobMultiplier(offset);\n        // let offset = { y: (e.nativeEvent.offsetY), x: (e.nativeEvent.offsetX) };\n        let multiplier =\n          1.17 * Math.pow(Math.min(1.5, knobMultiplier), 2.5);\n        // 0.5 * Math.pow(knobMultiplier, 2.7);\n        // 0.05 * Math.pow(getKnobMultiplier(offset), 2);\n        console.log(`multiplier: ${multiplier}, knobMultiplier: ${knobMultiplier}`);\n        if (Math.abs(velocity.x) > Math.abs(velocity.y)) {\n          velocity.xDominant = true;\n        }\n        else if (Math.abs(velocity.x) === Math.abs(velocity.y)) {\n          velocity.y = 1.5 * velocity.y;\n        }\n        switch (quad) {\n          case 2:\n            velocity.x = -1 * velocity.x;\n            break;\n          case 3:\n            velocity = { ...velocity, x: -1 * velocity.x, y: -1 * velocity.y };\n            break;\n          case 4:\n            velocity.y = -1 * velocity.y;\n            break;\n          default: break;\n        };\n\n        if (velocity.xDominant) {\n          knobValue = convertKnobValue(knob.innerValue + multiplier * velocity.x);\n        }\n        else {\n          knobValue = convertKnobValue(knob.innerValue + multiplier * velocity.y);\n        }\n\n        setKnob((knob) => {\n          return {\n            ...knob,\n            innerValue: knobValue.innerValue,\n            value: knobValue.value,\n            refValue: { x: offset.x, y: offset.y }\n          }\n        });\n      }}\n    >\n      <circle stroke=\"#ffffff00\" pointerEvents=\"all\" strokeWidth=\"0.5vh\" fill=\"#ffffff00\" r={r + 7} cy={cy} cx={cx} />\n      <circle stroke=\"black\" pointerEvents=\"none\" strokeWidth=\"0.5vh\" fill={styleFunc.knob(knob.value, knob.active ? \"green\" : \"WHITE\")} r={r - 7} cy={cy} cx={cx}></circle>\n      <foreignObject height='100' width='100' pointerEvents={'none'}>\n        <p className=\"knobLabel\" style={{ width: 0, height: 0 }}>{label}</p>\n        <div className=\"roundedBorderLeft\"></div>\n        <div className=\"roundedBorderRight\"></div>\n        <div className=\"dialValue\">{knob ? knob.value : \"\"}</div>\n        <div className=\"text\" style={\n          {\n            textAlign: knob.side,\n            paddingTop: 'calc(' + (knob.innerValue) + 'px)'\n          }\n        }>\n          <p tabIndex={0}\n            onKeyDown={(e) => {\n              onKnobKey(e);\n            }} style={styleFunc.handle(knob.value, { background: knob.active ? 'red' : knob.hoverInactive ? 'green' : handleColor ? handleColor : 'black' })}></p>\n        </div>\n      </foreignObject>\n    </svg>\n  );\n}//Knob\n\nexport { Knob }"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1829, "column": 0}, "map": {"version":3,"sources":["file:///home/entitycx/reactDev/src/app/components/UX/controller.js"],"sourcesContent":["import { ControlSetInitializer, numberToHex } from '../Util/input';\nimport { Knob } from './Knob/Knob';\nimport { GridSizeControl } from '../Util/Grid/Grid';\n\n// Controllers\n//-----------------------------------------------------------------------------/\n//  Knobs and other input elements \n//  \n//  (used as part of pipe filters)\n//\n/**\n * controllerSetDuration\n * \n * @param {*} onOptionChange \n * @returns \n */\nfunction controllerSetDuration(onOptionChange) {\n  return [\n    <ControlSetInitializer key={\"duration\"}><Knob\n      key={\"duration\"} name={\"duration\"} minValue={10} maxValue={300} label={\"Burn Duration\"}\n      className={\"controlBorder\"} onChange={onOptionChange} defaultValue={\"30\"}\n    /></ControlSetInitializer>\n  ]\n}//controllerSetDuration\n\n/**\n * controllerSetPaper\n * @callback controllerSet\n * @param {*} onOptionChange \n * @returns \n */\nfunction controllerSetPaper(onOptionChange) {\n\n  return <ControlSetInitializer key={\"paperControl\"}>{[\n    <Knob\n      key={\"opacity\"} name={\"opacity\"} minValue={0} maxValue={255} defaultValue={98} label={\"Paper Opacity\"}\n      onChange={onOptionChange} styleProps={(value) => {\n        return {\n          knob: (val, style) => { return '#ffffff' + numberToHex(val) },\n          handle: (value, style) => { return style }\n        }\n      }}\n      handleColor={'white'}\n    />,\n    <label key={\"bgColor\"} name={\"bgColor\"} className=\"colorChooser controlBorder\"><p>Paper Color:</p><input name={\"bgColor\"} type=\"color\" defaultValue={\"#dfae9f\"} onChange={onOptionChange} /></label>,\n    <label key={\"color\"} name={\"color\"} className=\"colorChooser controlBorder\"><p>Text Color:</p><input name={\"color\"} type=\"color\" defaultValue={\"#080808\"} onChange={onOptionChange} /></label>,\n  ]}</ControlSetInitializer>\n}//controllerSetPaper\n\n/**\n * controllerSetGrid\n * @callback controllerSetRender\n * @param {*} onOptionChange \n * @returns \n */\nfunction controllerSetGrid(onOptionChange) {\n  return <GridSizeControl className={\"controlBorder\"} onChange={(e) => onOptionChange(e, true)} defaultSize={{ y: 2, x: 2 }} />\n}\n\n/**\n* controllerSetGrid\n* @callback controllerSetRender\n* @param {*} onOptionChange \n* @returns \n*/\nfunction controllerSetFont(onOptionChange) {\n  return <ControlSetInitializer><label key={\"fontSize\"} name={\"fontSize\"}><p>Font Size:</p><input name={\"fontSize\"} type=\"number\" min={1} max={10} defaultValue={2} onChange={onOptionChange} /></label></ControlSetInitializer>\n}\n\n//--end-controllers------------------------------------------------------------/\n\nexport { controllerSetDuration, controllerSetGrid, controllerSetPaper, controllerSetFont };"],"names":[],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;;;;;AAEA,cAAc;AACd,gFAAgF;AAChF,mCAAmC;AACnC,IAAI;AACJ,kCAAkC;AAClC,EAAE;AACF;;;;;CAKC,GACD,SAAS,sBAAsB,cAAc;IAC3C,OAAO;sBACL,8OAAC,kKAAqB;sBAAkB,cAAA,8OAAC,sJAAI;gBAC1B,MAAM;gBAAY,UAAU;gBAAI,UAAU;gBAAK,OAAO;gBACvE,WAAW;gBAAiB,UAAU;gBAAgB,cAAc;eAD/D;;;;;WADqB;;;;;KAI7B;AACH,EAAC,uBAAuB;AAExB;;;;;CAKC,GACD,SAAS,mBAAmB,cAAc;IAExC,qBAAO,8OAAC,kKAAqB;kBAAuB;0BAClD,8OAAC,sJAAI;gBACa,MAAM;gBAAW,UAAU;gBAAG,UAAU;gBAAK,cAAc;gBAAI,OAAO;gBACtF,UAAU;gBAAgB,YAAY,CAAC;oBACrC,OAAO;wBACL,MAAM,CAAC,KAAK;4BAAY,OAAO,YAAY,IAAA,wJAAW,EAAC;wBAAK;wBAC5D,QAAQ,CAAC,OAAO;4BAAY,OAAO;wBAAM;oBAC3C;gBACF;gBACA,aAAa;eAPR;;;;;0BASP,8OAAC;gBAAsB,MAAM;gBAAW,WAAU;;kCAA6B,8OAAC;kCAAE;;;;;;kCAAgB,8OAAC;wBAAM,MAAM;wBAAW,MAAK;wBAAQ,cAAc;wBAAW,UAAU;;;;;;;eAA9J;;;;;0BACZ,8OAAC;gBAAoB,MAAM;gBAAS,WAAU;;kCAA6B,8OAAC;kCAAE;;;;;;kCAAe,8OAAC;wBAAM,MAAM;wBAAS,MAAK;wBAAQ,cAAc;wBAAW,UAAU;;;;;;;eAAvJ;;;;;SACb;OAbkC;;;;;AAcrC,EAAC,oBAAoB;AAErB;;;;;CAKC,GACD,SAAS,kBAAkB,cAAc;IACvC,qBAAO,8OAAC,mKAAe;QAAC,WAAW;QAAiB,UAAU,CAAC,IAAM,eAAe,GAAG;QAAO,aAAa;YAAE,GAAG;YAAG,GAAG;QAAE;;;;;;AAC1H;AAEA;;;;;AAKA,GACA,SAAS,kBAAkB,cAAc;IACvC,qBAAO,8OAAC,kKAAqB;kBAAC,cAAA,8OAAC;YAAuB,MAAM;;8BAAY,8OAAC;8BAAE;;;;;;8BAAc,8OAAC;oBAAM,MAAM;oBAAY,MAAK;oBAAS,KAAK;oBAAG,KAAK;oBAAI,cAAc;oBAAG,UAAU;;;;;;;WAAlI;;;;;;;;;;AAC5C","debugId":null}},
    {"offset": {"line": 2038, "column": 0}, "map": {"version":3,"sources":["file:///home/entitycx/reactDev/src/app/components/Util/filter.js"],"sourcesContent":["import { Filter } from '../Util/Filter/PipeFilter';\nimport { numberToHex } from '../Util/input.js';\nimport { parseImages, parseSpans, parseParagraphs } from '../Util/Parse/ElementParser';\nimport { controllerSetDuration, controllerSetGrid, controllerSetPaper, controllerSetFont } from '../UX/controller';\n\n/**\n * filterSet\n * \n * @param {*} onFilterChange \n * @returns \n */\nfunction filterSet(onFilterChange) {\n  return [\n    <Filter key={\"textParsing\"}\n      content={(value, state, acc) => {\n        if (!value) value = 'eg: Farewell Twitter https://images.gr-assets.com/authors/1718224641p5/15042371.jpg';\n        let content = acc;//Array.isArray(acc) ? acc : [];//acc || [];\n        if (!parseParagraphs(value, content, { img: true })) {\n          if (!parseSpans(value, content, { img: true })) {\n            if (!parseImages(value, content, { img: true })) {\n              content.push(<p key={Math.random().toString(16) + content.length}>{value}</p>);\n            }\n          }\n        }\n        return content;\n      }}\n    />,\n    <Filter name={\"grid\"} key={\"grid\"}\n      event={(value, state, acc) => {\n        console.log(\"grid event state\", state, \"value\", value, \"acc\", acc)\n\n        if (state && (state.xLength || state.yLength)) {\n          let newGridOptions = { data: [], option: {} };\n          if (state.xLength && !isNaN(state.xLength.value)) {\n            newGridOptions.option.xLength = state.xLength.value;\n          }\n          if (state.yLength && !isNaN(state.yLength.value)) {\n            newGridOptions.option.yLength = state.yLength.value;\n          }\n          return { newGrid: { ...newGridOptions.option } };\n        } else {\n          return { ...state, value: value };\n        }\n      }}\n\n      onFilterChange={onFilterChange}\n      controllerSet={controllerSetGrid}\n    />,\n    <Filter name={\"duration\"} key={\"fireEffect\"}\n      style={(value, state, acc) => {\n        if (!isNaN(state.duration.value)) {\n          return {\n            animationLetter: `letterAnim ${state.duration.value}s cubic-bezier(1, 0.3, 0, 1.02) 0s normal forwards`,\n            animationSmoke: `smokeAnim ${state.duration.value}s cubic-bezier(.14,.73,.96,.09) 0s normal forwards`,\n            animationFire: `flameAnim ${state.duration.value}s cubic-bezier(.14,.73,.96,.09) 0s normal forwards`,\n          };\n        }\n        else return {};\n      }}\n      onFilterChange={onFilterChange}\n      controllerSet={controllerSetDuration}\n    />,\n    <Filter name={\"pos\"} key={\"gridPosition\"}\n      style={(value, acc) => {\n        let rotate = Math.floor(Math.random() * 40) * (Math.floor(Math.random() * 100) % 2 === 0 ? -1 : 1);\n        return { transform: `rotate(${rotate}deg)` }\n      }}\n      onFilterChange={onFilterChange}\n    />,\n    <Filter name={\"paperEffect\"} key={\"paperEffect\"}\n      style={(value, state, acc) => {\n        if (!state) {\n          state = { opacity: { value: 210 }, bgColor: { value: '#cdae9f' }, color: { value: '#080808' } };\n        }\n        let backgroundColor, color;\n        if (state.bgColor.value) {\n          backgroundColor = state.bgColor.value;\n          if (state.opacity && !isNaN(state.opacity.value)) {\n            backgroundColor += numberToHex(state.opacity.value);\n          }\n        }\n        else {\n          backgroundColor = '#eeeeeedd';\n        }\n        if (state.color) {\n          color = state.color.value;\n        }\n        let item = {\n          backgroundColor,\n          color\n        };\n        return { ...item };\n      }}\n      onFilterChange={onFilterChange}\n      controllerSet={controllerSetPaper}\n    />,\n    <Filter name={\"fontSize\"} key={\"fontSize\"}\n      style={(value, state, acc) => {\n        let a = { fontSize: (state?.fontSize?.value || 6) + 'em' };\n        return state ? { burningElement: { ...state.burningElement || {}, ...a } } : { burningElement: { ...a } };\n      }}\n\n      onFilterChange={onFilterChange}\n      controllerSet={controllerSetFont}\n    />,\n  ];\n}//filterSet\n\nexport { filterSet };"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;;;AAEA;;;;;CAKC,GACD,SAAS,UAAU,cAAc;IAC/B,OAAO;sBACL,8OAAC,kKAAM;YACL,SAAS,CAAC,OAAO,OAAO;gBACtB,IAAI,CAAC,OAAO,QAAQ;gBACpB,IAAI,UAAU,KAAI,4CAA4C;gBAC9D,IAAI,CAAC,IAAA,6KAAe,EAAC,OAAO,SAAS;oBAAE,KAAK;gBAAK,IAAI;oBACnD,IAAI,CAAC,IAAA,wKAAU,EAAC,OAAO,SAAS;wBAAE,KAAK;oBAAK,IAAI;wBAC9C,IAAI,CAAC,IAAA,yKAAW,EAAC,OAAO,SAAS;4BAAE,KAAK;wBAAK,IAAI;4BAC/C,QAAQ,IAAI,eAAC,8OAAC;0CAAqD;+BAA9C,KAAK,MAAM,GAAG,QAAQ,CAAC,MAAM,QAAQ,MAAM;;;;;wBAClE;oBACF;gBACF;gBACA,OAAO;YACT;WAZW;;;;;sBAcb,8OAAC,kKAAM;YAAC,MAAM;YACZ,OAAO,CAAC,OAAO,OAAO;gBACpB,QAAQ,GAAG,CAAC,oBAAoB,OAAO,SAAS,OAAO,OAAO;gBAE9D,IAAI,SAAS,CAAC,MAAM,OAAO,IAAI,MAAM,OAAO,GAAG;oBAC7C,IAAI,iBAAiB;wBAAE,MAAM,EAAE;wBAAE,QAAQ,CAAC;oBAAE;oBAC5C,IAAI,MAAM,OAAO,IAAI,CAAC,MAAM,MAAM,OAAO,CAAC,KAAK,GAAG;wBAChD,eAAe,MAAM,CAAC,OAAO,GAAG,MAAM,OAAO,CAAC,KAAK;oBACrD;oBACA,IAAI,MAAM,OAAO,IAAI,CAAC,MAAM,MAAM,OAAO,CAAC,KAAK,GAAG;wBAChD,eAAe,MAAM,CAAC,OAAO,GAAG,MAAM,OAAO,CAAC,KAAK;oBACrD;oBACA,OAAO;wBAAE,SAAS;4BAAE,GAAG,eAAe,MAAM;wBAAC;oBAAE;gBACjD,OAAO;oBACL,OAAO;wBAAE,GAAG,KAAK;wBAAE,OAAO;oBAAM;gBAClC;YACF;YAEA,gBAAgB;YAChB,eAAe,iKAAiB;WAnBP;;;;;sBAqB3B,8OAAC,kKAAM;YAAC,MAAM;YACZ,OAAO,CAAC,OAAO,OAAO;gBACpB,IAAI,CAAC,MAAM,MAAM,QAAQ,CAAC,KAAK,GAAG;oBAChC,OAAO;wBACL,iBAAiB,CAAC,WAAW,EAAE,MAAM,QAAQ,CAAC,KAAK,CAAC,kDAAkD,CAAC;wBACvG,gBAAgB,CAAC,UAAU,EAAE,MAAM,QAAQ,CAAC,KAAK,CAAC,kDAAkD,CAAC;wBACrG,eAAe,CAAC,UAAU,EAAE,MAAM,QAAQ,CAAC,KAAK,CAAC,kDAAkD,CAAC;oBACtG;gBACF,OACK,OAAO,CAAC;YACf;YACA,gBAAgB;YAChB,eAAe,qKAAqB;WAZP;;;;;sBAc/B,8OAAC,kKAAM;YAAC,MAAM;YACZ,OAAO,CAAC,OAAO;gBACb,IAAI,SAAS,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,MAAM,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,OAAO,MAAM,IAAI,CAAC,IAAI,CAAC;gBACjG,OAAO;oBAAE,WAAW,CAAC,OAAO,EAAE,OAAO,IAAI,CAAC;gBAAC;YAC7C;YACA,gBAAgB;WALQ;;;;;sBAO1B,8OAAC,kKAAM;YAAC,MAAM;YACZ,OAAO,CAAC,OAAO,OAAO;gBACpB,IAAI,CAAC,OAAO;oBACV,QAAQ;wBAAE,SAAS;4BAAE,OAAO;wBAAI;wBAAG,SAAS;4BAAE,OAAO;wBAAU;wBAAG,OAAO;4BAAE,OAAO;wBAAU;oBAAE;gBAChG;gBACA,IAAI,iBAAiB;gBACrB,IAAI,MAAM,OAAO,CAAC,KAAK,EAAE;oBACvB,kBAAkB,MAAM,OAAO,CAAC,KAAK;oBACrC,IAAI,MAAM,OAAO,IAAI,CAAC,MAAM,MAAM,OAAO,CAAC,KAAK,GAAG;wBAChD,mBAAmB,IAAA,wJAAW,EAAC,MAAM,OAAO,CAAC,KAAK;oBACpD;gBACF,OACK;oBACH,kBAAkB;gBACpB;gBACA,IAAI,MAAM,KAAK,EAAE;oBACf,QAAQ,MAAM,KAAK,CAAC,KAAK;gBAC3B;gBACA,IAAI,OAAO;oBACT;oBACA;gBACF;gBACA,OAAO;oBAAE,GAAG,IAAI;gBAAC;YACnB;YACA,gBAAgB;YAChB,eAAe,kKAAkB;WAzBD;;;;;sBA2BlC,8OAAC,kKAAM;YAAC,MAAM;YACZ,OAAO,CAAC,OAAO,OAAO;gBACpB,IAAI,IAAI;oBAAE,UAAU,CAAC,OAAO,UAAU,SAAS,CAAC,IAAI;gBAAK;gBACzD,OAAO,QAAQ;oBAAE,gBAAgB;wBAAE,GAAG,MAAM,cAAc,IAAI,CAAC,CAAC;wBAAE,GAAG,CAAC;oBAAC;gBAAE,IAAI;oBAAE,gBAAgB;wBAAE,GAAG,CAAC;oBAAC;gBAAE;YAC1G;YAEA,gBAAgB;YAChB,eAAe,iKAAiB;WAPH;;;;;KAShC;AACH,EAAC,WAAW","debugId":null}},
    {"offset": {"line": 2229, "column": 0}, "map": {"version":3,"sources":["file:///home/entitycx/reactDev/src/app/components/UX/input.js"],"sourcesContent":["/**\n * inputElement\n * \n * @param {string} inputState \n * @param {*} onChange \n * @returns \n */\nconst inputElement = (inputState = '', onChange) => {\n  return <label key={\"inputText\"}>\n    <textarea key={\"inputTextarea\"}\n      placeholder=\"eg: Farewell Twitter https://images.gr-assets.com/authors/1718224641p5/15042371.jpg\"\n      onChange={onChange}\n      value={inputState}\n    />\n  </label>\n}\n\nfunction submitElement(onSubmitInput) {\n  return <button name={\"submitInput\"} onClick={onSubmitInput} type=\"submit\">Burn It</button>\n}\n\nexport { inputElement, submitElement };"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;;;;;;AACD,MAAM,eAAe,CAAC,aAAa,EAAE,EAAE;IACrC,qBAAO,8OAAC;kBACN,cAAA,8OAAC;YACC,aAAY;YACZ,UAAU;YACV,OAAO;WAHM;;;;;OADE;;;;;AAOrB;AAEA,SAAS,cAAc,aAAa;IAClC,qBAAO,8OAAC;QAAO,MAAM;QAAe,SAAS;QAAe,MAAK;kBAAS;;;;;;AAC5E","debugId":null}},
    {"offset": {"line": 2277, "column": 0}, "map": {"version":3,"sources":["file:///home/entitycx/reactDev/src/app/components/UX/Input/MixedInputForm.js"],"sourcesContent":["\"use client\";\nimport React, { useReducer } from 'react';\n/**\n * GridForm\n * \n * Input is cleared on every submission.  The input preview \n * remains accessible, however, allowing for multiple submissions\n * of the \"previous\" value.\n * \n * @typedef {{inputData: *, inputPreview: *}} GridInputState\n * @typedef {{type:string, value: React.SyntheticEvent}} GridInput\n * \n * @param {{\n *   input: {type: string, value: React.SyntheticEvent}\n * }} props\n * @returns {React.ComponentElement}\n * \n * @param {React.JSXElementConstructor} props.submit \n * @param {React.JSXElementConstructor} props.onSubmit \n */\nfunction MixedInputForm({ inputElement, submitElement, onSubmit }) {\n\n  const [inputState, inputDispatch] = useReducer(\n    onSetInput,\n    { inputData: \"\", inputPreview: \"\" }\n  );\n\n  const { inputData, inputPreview } = inputState;\n\n  /**\n   * onSetInput\n   * \n   * Reducer for input state (data + preview)\n   * \n   * @param{GridInputState} inputState - input state\n   * @param {GridInput} input - input type and update event\n   * @returns {GridInputState} input state after update\n   */\n  function onSetInput(inputState, input) {\n    let result = {};\n    switch (input.type) {\n      case \"input\":\n        result = { inputData: input.value.target.value, inputPreview: input.value.target.value };\n        break;\n      case \"submit\":\n        result = { inputData: input.value.target.value, inputPreview: inputState.inputPreview };\n        break;\n      default:\n        result = { inputData: inputState.inputData, inputPreview: inputState.inputPreview };\n        break;\n    }\n    return result;\n  }\n\n  /**\n   * _onSubmit\n   * \n   * @param {React.SyntheticEvent} e \n   */\n  function _onSubmit(e) {\n    e.preventDefault();\n    e.stopPropagation();\n    inputDispatch({ value: e, type: \"submit\" });\n    onSubmit(inputPreview);\n  }\n\n  /**\n   * _onInput\n   * \n   * @param {React.SyntheticEvent} e \n   */\n  function _onInput(e) {\n    inputDispatch({ value: e, type: \"input\" });\n  }\n\n  return (\n    <form>\n      {inputElement(inputData, _onInput)}\n      {submitElement(_onSubmit)}\n    </form>\n  )\n}//GridForm\n\nexport { MixedInputForm }\n"],"names":[],"mappings":";;;;;AACA;AADA;;;AAEA;;;;;;;;;;;;;;;;;CAiBC,GACD,SAAS,eAAe,EAAE,YAAY,EAAE,aAAa,EAAE,QAAQ,EAAE;IAE/D,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,mNAAU,EAC5C,YACA;QAAE,WAAW;QAAI,cAAc;IAAG;IAGpC,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,GAAG;IAEpC;;;;;;;;GAQC,GACD,SAAS,WAAW,UAAU,EAAE,KAAK;QACnC,IAAI,SAAS,CAAC;QACd,OAAQ,MAAM,IAAI;YAChB,KAAK;gBACH,SAAS;oBAAE,WAAW,MAAM,KAAK,CAAC,MAAM,CAAC,KAAK;oBAAE,cAAc,MAAM,KAAK,CAAC,MAAM,CAAC,KAAK;gBAAC;gBACvF;YACF,KAAK;gBACH,SAAS;oBAAE,WAAW,MAAM,KAAK,CAAC,MAAM,CAAC,KAAK;oBAAE,cAAc,WAAW,YAAY;gBAAC;gBACtF;YACF;gBACE,SAAS;oBAAE,WAAW,WAAW,SAAS;oBAAE,cAAc,WAAW,YAAY;gBAAC;gBAClF;QACJ;QACA,OAAO;IACT;IAEA;;;;GAIC,GACD,SAAS,UAAU,CAAC;QAClB,EAAE,cAAc;QAChB,EAAE,eAAe;QACjB,cAAc;YAAE,OAAO;YAAG,MAAM;QAAS;QACzC,SAAS;IACX;IAEA;;;;GAIC,GACD,SAAS,SAAS,CAAC;QACjB,cAAc;YAAE,OAAO;YAAG,MAAM;QAAQ;IAC1C;IAEA,qBACE,8OAAC;;YACE,aAAa,WAAW;YACxB,cAAc;;;;;;;AAGrB,EAAC,UAAU","debugId":null}},
    {"offset": {"line": 2380, "column": 0}, "map": {"version":3,"sources":["file:///home/entitycx/reactDev/src/app/components/Element/GridWrapper.js"],"sourcesContent":["\"use client\";\r\nimport \"../../App.css\";\r\nimport { Grid } from \"../Util/Grid/Grid\";\r\nimport { OptionPipe } from \"../Util/Filter/PipeFilter\";\r\n//------views-----------------------------------------------------------------//\r\nimport { ElementView } from \"../Element/ElementView\";\r\n\r\n//------callbacks-------------------------------------------------------------//\r\n\r\n// grid state  reducer\r\n//\r\nimport { onSetGrid, gridOptionData } from \"../Util/grid\";\r\n\r\n//\r\n// (filters, some with UI elements, controlling styles, events, & content)\r\n//\r\nimport { filterSet } from \"../Util/filter\";\r\n\r\n// input/submit elements\r\n//\r\nimport { inputElement, submitElement } from \"../UX/input\";\r\nimport { MixedInputForm } from \"../UX/Input/MixedInputForm\";\r\nimport { useGridRef } from \"../Context/GridContext\";\r\nfunction InputArchitecture({ onSubmit }) {\r\n    return (\r\n        <details>\r\n            <summary>Submit/Options</summary>\r\n            <OptionPipe\r\n                input={(onSubmitToPipe) => (\r\n                    <MixedInputForm\r\n                        inputElement={inputElement}\r\n                        submitElement={submitElement}\r\n                        onSubmit={onSubmitToPipe}\r\n                    />\r\n                )}\r\n                filterSet={filterSet}\r\n                onOutput={onSubmit}\r\n            />\r\n        </details>\r\n    );\r\n}\r\n\r\n//------static functions-------------------------------------------------------//\r\nfunction GridWrapper() {\r\n    const gridElement = useGridRef();\r\n    /**\r\n     *\r\n     * @param {import('./Element/ElementView').BurningItem[]} gridData\r\n     * @returns\r\n     */\r\n    const burningElement = (gridData) => {\r\n        if (!gridElement) {\r\n            return null;\r\n        }\r\n        return (\r\n            <ElementView data={gridData} parent={gridElement} />\r\n        );\r\n    }\r\n    /**\r\n     * inputForm\r\n    *\r\n    * @param {*} onSubmitToGrid\r\n    * @returns\r\n    */\r\n    const inputForm = (onSubmitToGrid) => {\r\n        return <InputArchitecture onSubmit={onSubmitToGrid} />;\r\n    } //inputForm\r\n\r\n    return (\r\n        <div className=\"Grid-reducer-holder\">\r\n            <Grid optionData={gridOptionData} onSetGrid={onSetGrid} form={inputForm}>\r\n                {burningElement}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\nexport { GridWrapper }"],"names":[],"mappings":";;;;;AAEA;AACA;AACA,gFAAgF;AAChF;AAEA,gFAAgF;AAEhF,sBAAsB;AACtB,EAAE;AACF;AAEA,EAAE;AACF,0EAA0E;AAC1E,EAAE;AACF;AAEA,wBAAwB;AACxB,EAAE;AACF;AACA;AACA;AAtBA;;;;;;;;;;;AAuBA,SAAS,kBAAkB,EAAE,QAAQ,EAAE;IACnC,qBACI,8OAAC;;0BACG,8OAAC;0BAAQ;;;;;;0BACT,8OAAC,sKAAU;gBACP,OAAO,CAAC,+BACJ,8OAAC,2KAAc;wBACX,cAAc,uJAAY;wBAC1B,eAAe,wJAAa;wBAC5B,UAAU;;;;;;gBAGlB,WAAW,uJAAS;gBACpB,UAAU;;;;;;;;;;;;AAI1B;AAEA,iFAAiF;AACjF,SAAS;IACL,MAAM,cAAc,IAAA,gKAAU;IAC9B;;;;KAIC,GACD,MAAM,iBAAiB,CAAC;QACpB,IAAI,CAAC,aAAa;YACd,OAAO;QACX;QACA,qBACI,8OAAC,iKAAW;YAAC,MAAM;YAAU,QAAQ;;;;;;IAE7C;IACA;;;;;IAKA,GACA,MAAM,YAAY,CAAC;QACf,qBAAO,8OAAC;YAAkB,UAAU;;;;;;IACxC,EAAE,WAAW;;IAEb,qBACI,8OAAC;QAAI,WAAU;kBACX,cAAA,8OAAC,wJAAI;YAAC,YAAY,0JAAc;YAAE,WAAW,qJAAS;YAAE,MAAM;sBACzD;;;;;;;;;;;AAIjB","debugId":null}}]
}